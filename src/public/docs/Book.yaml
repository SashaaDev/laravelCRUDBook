openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost/api'
    description: local

components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:

  /books:
    get:
      tags:
        - Get books
      summary: Get all books
      responses:
        '404':
          description: Book is not exist
          content:
            application/json:
              schema:
                example: Entity not found
        '200':
          description: Successful displayed all books
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    format: int32
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                        title:
                          type: string
                        publisher:
                          type: string
                        genre:
                          type: string
                        publication_date:
                          type: string
                          format: date
                        word_count:
                          type: integer
                          format: int32
                        price:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                  first_page_url:
                    type: string
                  from:
                    type: integer
                    format: int32
                  last_page:
                    type: integer
                    format: int32
                  last_page_url:
                    type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: nullable
                        label:
                          type: string
                        active:
                          type: boolean
                  next_page_url:
                    type: string
                    format: nullable
                  path:
                    type: string
                  per_page:
                    type: integer
                    format: int32
                  prev_page_url:
                    type: string
                    format: nullable
                  to:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
    post:
      tags:
        -  Create book
      summary: Create new book
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Praesentium quis et.
                publisher:
                  type: string
                  example: Aut a repellendus ipsam nostrum.
                genre:
                  type: string
                  example: non-fiction
                publication_date:
                  type: string
                  format: date
                  example: 1977-01-2
                word_count:
                  type: string
                  example: 40020
                price:
                  type: integer
                  format: int32
                  example: 222

      responses:
        '200':
          description: Successful created book
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  publisher:
                    type: string
                  genre:
                    type: string
                  publication_date:
                    type: string
                    format: date
                  word_count:
                    type: string
                  price:
                    type: integer
                    format: int32
                  updated_at:
                    type: string
                  created_at:
                    type: string
                  id:
                    type: integer
                    format: int32
        '404':
          description: Entity not exist
          content:
            application/json:
              schema:
                example: Book is not found
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      title:
                        type: array
                        items:
                          type: string
                          example: "The title field is required."
                      publisher:
                        type: array
                        items:
                          type: string
                          example: "The publisher field is required."
                      genre:
                        type: array
                        items:
                          type: string
                          example: "The genre field is required."
                      publication_date:
                        type: array
                        items:
                          type: string
                          example: "The publication date is not a valid date."
                      word_count:
                        type: array
                        items:
                          type: string
                          example: "The word count must be a number."
                      price:
                        type: array
                        items:
                          type: string
                          example: "The price must be a number."
  /books/{id}:
    delete:
      tags:
        - Delete book
      summary: Delete book
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful deleted book
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    patch:
      tags:
        - Update book
      summary: Update book
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Aut quis et libero.

      responses:
        '200':
          description: Successful updated book
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 2
                  title:
                    type: string
                    example: Aut quis et libero.
                  publisher:
                    type: string
                    example: Aut a repellendus ipsam nostrum.
                  genre:
                    type: string
                    example: non-fiction
                  publication_date:
                    type: string
                    format: date
                    example: 1977-01-02
                  word_count:
                    type: integer
                    format: int32
                    example: 40020
                  price:
                    type: string
                    example: 222.00
                  created_at:
                    type: string
                    example: 2024-05-17T11:35:24.000000Z
                  updated_at:
                    type: string
                    example: 2024-05-17T14:20:35.000000Z

        '404':
          description: Book is not exist
          content:
            application/json:
              schema:
                example: Entity not found
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      title:
                        type: array
                        items:
                          type: string
                          example: "The title field is required."
                      publisher:
                        type: array
                        items:
                          type: string
                          example: "The publisher field is required."
                      genre:
                        type: array
                        items:
                          type: string
                          example: "The genre field is required."
                      publication_date:
                        type: array
                        items:
                          type: string
                          example: "The publication date is not a valid date."
                      word_count:
                        type: array
                        items:
                          type: string
                          example: "The word count must be a number."
                      price:
                        type: array
                        items:
                          type: string
                          example: "The price must be a number."
    get:
      tags:
        - Get book
      summary: Get book
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful get book
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 2
                  title:
                    type: string
                    example: Aut quis et libero.
                  publisher:
                    type: string
                    example: Aut a repellendus ipsam nostrum.
                  genre:
                    type: string
                    example: non-fiction
                  publication_date:
                    type: string
                    format: date
                    example: 1977-01-02
                  word_count:
                    type: integer
                    format: int32
                    example: 40020
                  price:
                    type: string
                    example: 222.00
                  created_at:
                    type: string
                    example: 2024-05-17T11:35:24.000000Z
                  updated_at:
                    type: string
                    example: 2024-05-17T14:20:35.000000Z
        '404':
          description: Book is not exist
          content:
            application/json:
              schema:
                example: Entity not found

